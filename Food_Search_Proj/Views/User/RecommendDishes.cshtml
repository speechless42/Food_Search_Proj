@model Food_Search_Proj.Models.Dishes

@{
    Layout = "../Shared/_LayoutUser.cshtml";
    ViewBag.Title = "RecommendDishes";
}
<script>
    $(function () {
        count = 0;
        $("#AddRow").click(function () {
            count++;
            $.get("../Admin/DishesOfFood", { count: count }, function (template) {
                $("#AddDiv").append(template)
            });
    });
    });

</script>
<h2>RecommendDishes</h2>



@using (Html.BeginForm("RecommendDishes", "User", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal" id="app123">
    <h4>Dishes</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @*@Html.LabelFor(model => model.Dishes_ID, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dishes_ID, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.DishID, type = "hidden" } })
            @Html.ValidationMessageFor(model => model.Dishes_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dishes_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dishes_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Dishes_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dishes_Methods, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Dishes_Methods, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Dishes_Methods, "", new { @class = "text-danger" })
        </div>
    </div>

    <div><input type="button" value="新增列" id="AddRow" /></div>
    <div id="AddDiv"></div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dishes_Photo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="image" id="image" class="form-control" v-on:change="PickFile" />
            @Html.ValidationMessageFor(model => model.Dishes_Photo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dishes_Remark, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dishes_Remark, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Dishes_Remark, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.Food_Review_Result, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.Food_Review_Result, new { htmlAttributes = new { @class = "form-control", @Value = 0, type = "hidden" } })
            @Html.ValidationMessageFor(model => model.Food_Review_Result, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.Referral_User_ID, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.Referral_User_ID, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.user, type = "hidden" } })
            @Html.ValidationMessageFor(model => model.Referral_User_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <img v-if="image" :src="image" width="200" />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    const { createApp } = Vue

    createApp({
        data() {
            return {
                image: "",
                selected: ""
            }
        },
        methods: {
            PickFile: function (e) {
                const file = e.target.files.item(0);
                const reader = new FileReader();
                reader.addEventListener('load', this.imageLoaded);
                reader.readAsDataURL(file);
            },
            imageLoaded: function (e) {
                this.image = e.target.result;
            }

        }
    }).mount('#app123')
</script>